#+TITLE: C Scratch

#+begin_src C :includes <stdio.h>
printf("%4d\n", 1000);
printf("%6f\n", 1000.00001);
printf("%6f\n", 0.1 + 0.2);
printf("%2d\n", 1000);
printf("%d\n", 1000);
#+end_src

#+RESULTS:
|       1000 |
| 1000.00001 |
|        0.3 |
|       1000 |
|       1000 |

#+begin_src C :includes <stdio.h> <string.h>
struct key {
    char* word;
    int count;
};

int binsearch(char *, struct key *, int);

int binsearch(char *word, struct key tab[], int n) {
    int cond;
    int low, mid, high;

    low = 0;
    high = n - 1;
    while (low <= high) {
        mid = (low + high) / 2;
        if ((cond = strcmp(word, tab[mid].word)) < 0) {
            high = mid - 1;
        } else if (cond > 0) {
            low = mid + 1;
        } else {
            return mid;
        }
    }
    return -1;
}

int main() {
    struct key k = {"hi", 1};
    struct key karr[] = {k};

    printf("at pos %d\n", binsearch("hi", karr, 1));
}
#+end_src

#+RESULTS:
: at pos 0


#+begin_src C :includes <stdio.h>
char *arr[5];
arr[0] = "zero";
arr[1] = "one";

    printf("%s\n", arr[1]);
    printf("%s\n", arr[2]);
int i;
i = 0;
while (arr[i] != NULL) {
    printf("at %d, %s\n", i, arr[i]);
    ++i;
}
#+end_src

#+RESULTS:
| one    |    |      |
| (null) |    |      |
| at     | 0, | zero |
| at     | 1, | one  |

#+begin_src C :includes <stdio.h> :tangle tofive.c
void tofive(int *n);

void tofive(int *n) {
    while (*n < 5) {
        (*n)++;
    }
}

int main() {
    int i;
    int *ip;

    i = 0;
    ip = &i;

    printf("i was %d...\n", i);
    tofive(ip);
    printf("i is now %d.\n", i);
}
#+end_src

#+RESULTS:
| i | was | 0... |   |
| i | is  |  now | 5 |
